{"version":3,"sources":["logo.svg","calendar-days.js","calendar.js","App.js","reportWebVitals.js","index.js"],"names":["CalendarDays","props","firstDayOfMonth","Date","day","getFullYear","getMonth","weekdayOfFirstDay","getDay","currentDays","setDate","getDate","calendarDay","currentMonth","date","month","number","selected","toDateString","year","push","className","map","onClick","changeCurrentDay","Calendar","setState","currentDay","nextDay","state","previousDay","weekdays","months","this","substring","weekday","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d1431d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function CalendarDays(props) {\n  const firstDayOfMonth = new Date(props.day.getFullYear(), props.day.getMonth(), 1);\n  const weekdayOfFirstDay = firstDayOfMonth.getDay();\n  let currentDays = [];\n\n  for (let day = 0; day < 42; day++) {\n    if (day === 0 && weekdayOfFirstDay === 0) {\n      firstDayOfMonth.setDate(firstDayOfMonth.getDate() - 7);\n    } else if (day === 0) {\n      firstDayOfMonth.setDate(firstDayOfMonth.getDate() + (day - weekdayOfFirstDay));\n    } else {\n      firstDayOfMonth.setDate(firstDayOfMonth.getDate() + 1);\n    }\n\n    let calendarDay = {\n      currentMonth: (firstDayOfMonth.getMonth() === props.day.getMonth()),\n      date: (new Date(firstDayOfMonth)),\n      month: firstDayOfMonth.getMonth(),\n      number: firstDayOfMonth.getDate(),\n      selected: (firstDayOfMonth.toDateString() === props.day.toDateString()),\n      year: firstDayOfMonth.getFullYear()\n    }\n\n    currentDays.push(calendarDay);\n  }\n\n  return (\n    <div className=\"table-content\">\n      {\n        currentDays.map((day) => {\n          return (\n            <div className={\"calendar-day\" + (day.currentMonth ? \" current\" : \"\") + (day.selected ? \" selected\" : \"\")}\n                  onClick={() => props.changeCurrentDay(day)}>\n              <p>{day.number}</p>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default CalendarDays;\n","import React, { Component } from 'react';\nimport CalendarDays from './calendar-days';\nimport './calendar.css'\n\nexport default class Calendar extends Component {\n  constructor() {\n    super();\n\n    this.weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.months = ['January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.state = {\n      currentDay: new Date()\n    }\n  }\n\n  changeCurrentDay = (day) => {\n    this.setState({ currentDay: new Date(day.year, day.month, day.number) });\n  }\n\n  nextDay = () => {\n    this.setState({ currentDay: new Date(this.state.currentDay.setDate(this.state.currentDay.getDate() + 1)) });\n  }\n\n  previousDay = () => {\n    this.setState({ currentDay: new Date(this.state.currentDay.setDate(this.state.currentDay.getDate() - 1)) });\n  }\n\n  render() {\n    return (\n      <div className=\"calendar\">\n        <div className=\"calendar-header\">\n          <div className=\"title\">\n            <h2>{this.months[this.state.currentDay.getMonth()]} {this.state.currentDay.getFullYear()}</h2>\n          </div>\n          <div className=\"tools\">\n            <button onClick={this.previousDay}>\n              <span className=\"material-icons\">\n                arrow_back\n                </span>\n            </button>\n            <p>{this.months[this.state.currentDay.getMonth()].substring(0, 3)} {this.state.currentDay.getDate()}</p>\n            <button onClick={this.nextDay}>\n              <span className=\"material-icons\">\n                arrow_forward\n                </span>\n            </button>\n          </div>\n        </div>\n        <div className=\"calendar-body\">\n          <div className=\"table-header\">\n            {\n              this.weekdays.map((weekday) => {\n                return <div className=\"weekday\"><p>{weekday}</p></div>\n              })\n            }\n          </div>\n          <CalendarDays day={this.state.currentDay} changeCurrentDay={this.changeCurrentDay} />\n        </div>\n      </div>\n    )\n  }\n}\n","import logo from './logo.svg';\nimport Calendar from './calendar';\n\nfunction App() {\n  return (\n    <Calendar />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}